#!/usr/bin/env perl

use strict;
use warnings;
use Code::CutNPaste;
use Getopt::Long;

GetOptions(
    'window=i'      => \my $window,
    'exact'         => \my $exact,
    'ignore=s@'     => \my @ignore,
    'show_warnings' => \my $show_warnings,
    'jobs=i'        => \( my $jobs = 1 ),
) or die "Bad options";

my ( @dirs, @files );
foreach my $arg (@ARGV) {
    if ( -d $arg ) {
        push @dirs => $arg;
    }
    elsif ( -f $arg ) {
        push @files => $arg;
    }
    else {
        warn "Don't know what to do with '$arg'. Ignoring";
    }
}
if ( !@dirs and !@files ) {
    @dirs = 'lib';
}

my %renamed = (
    renamed_vars => 1,
    renamed_subs => 1,
);
if ($exact) {
    %renamed = ();
}

my $cutnpaste = Code::CutNPaste->new(
    dirs          => \@dirs,
    files         => \@files,
    ignore        => \@ignore,
    window        => $window,
    verbose       => 1,
    show_warnings => $show_warnings,
    jobs          => $jobs,
    %renamed,
);
my $duplicates = $cutnpaste->duplicates;

foreach my $duplicate (@$duplicates) {
    my ( $left, $right ) = ( $duplicate->left, $duplicate->right );
    printf <<'END', $left->file, $left->line, $right->file, $right->line;
___________________________________________________________________________

Possible duplicate code found
Left:  %s line %d
Right: %s line %d

END
    my $report = "    " . $duplicate->report;
    $report =~ s/\n/\n    /g;
    print "$report\n";
}

__END__

=head1 NAME

find_duplicate_perl

=head1 SYNOPSIS

 find_duplicate_perl lib some_other_dir some_file.pl

=head1 OPTIONS

 --window=$window    Set minimum number of lines to look for duplicate code (default 5)
 --exact             If used, will ignore renamed variables and subs
 --ignore            A regex of duplicate code snippets to ignore (may be repeated)
 --show_warnings     If for some reason a file cannot load, use this to show the reason why
 --jobs              Number of jobs to run (default 1)

=head1 DESCRIPTION

Takes a list and directories as arguments and searches for duplicate Perl code
in all files it finds there.
